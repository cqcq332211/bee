const express = require('express');
const path = require('path');

const app = express();
const port = 3000;

// Set the views directory
app.set('views', path.join(__dirname,'views'));

// Set EJS as the view engine
app.set('view engine', 'ejs');

// Serve static files from the public directory
app.use(express.static(path.join(__dirname)));

// Serve the index.ejs file
app.get('/', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: 'Default text' });
});

// Serve different text content based on the URL path
app.get('/one', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "const express = require(\"express\");\nconst app = express();\nconst PORT = 3000;\nconst fs = require(\"fs\");\nconst session = require(\"express-session\");\nconst cookie = require(\"cookie-parser\");\n\napp.use(express.json());\napp.use(express.urlencoded({extended:true}));\napp.use(cookie());\napp.use(session({\n    saveUninitialized: true,\n    secret: \"shomik25\"\n}))\n\napp.set(\"view engine\",\"ejs\");\n\n\nfunction check (req,res,next){\n    if(req.session.user){\n        next();\n    }\n    else{\n        res.redirect(\"/login\");\n    }\n}\n\napp.get('/', check, (req,res)=>{\n    res.sendFile(__dirname + \"/home.html\");\n})\n\napp.get('/login', (req,res)=>{\n    res.sendFile(__dirname + \"/login.html\");\n})\napp.get('/signup', (req,res)=>{\n    res.sendFile(__dirname + \"/signup.html\");\n})\n\napp.post('/login',(req,res)=>{\n    const {userName, password} = req.body;\n    fs.readFile(\"./users.json\", \"utf-8\", (err,data)=>{\n        if(err){\n            console.log(\"error read the file\");\n            console.error(\"read error is : \",err);\n        }\n        else{\n            const users = JSON.parse(data);\n            let userHere = false;\n            users.forEach((user)=>{\n                if(user.userName == userName && user.password == password){\n                    userHere = true;\n                }\n            })\n            if(userHere){\n                req.session.user = userName;\n                res.redirect(\"/\");\n                return;\n            }\n            else{\n                res.send(\"user not found\");\n            }\n        }\n    })\n})\n\napp.post('/signup',(req,res)=>{\n    const {userName, password} = req.body;\n    fs.readFile(\"./users.json\", \"utf-8\", (err,data)=>{\n        if(err){\n            console.log(\"error read the file\");\n            console.error(\"read error is : \",err);\n            return;\n        }\n        else{\n            const users = JSON.parse(data);\n            let userHere = false;\n            users.forEach((user)=>{\n                if(user.userName == userName){\n                    userHere = true;\n                }\n            })\n            if(userHere){\n                res.send(\"user already here\");\n                return;\n            }\n            else{\n                users.push({userName, password});\n                fs.writeFile(\"./users.json\",JSON.stringify(users), (err)=>{\n                    if(err){\n                        console.log(\"error write the file\");\n                        console.error(\"write error is : \",err);\n                        return;\n                    }\n                    else{\n                        res.send(\"user added\");\n                        return;\n                    }\n                })\n            }\n        }\n    })\n})\n\napp.get(\"/logout\", (req,res)=>{\n    req.session.destroy();\n    res.redirect(\"/login\");\n})\n\n\napp.listen(PORT,(err)=>{\n    if(err){\n        console.log(\"error in listen\");\n        console.error(\"listen error: \", err);\n    }\n    console.log(\"sever is running\");\n})\n\n\n// <!DOCTYPE html>\n// <html lang=\"en\">\n// <head>\n//     <meta charset=\"UTF-8\">\n//     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//     <title>Document</title>\n// </head>\n// <body>\n//     <H1>this is Login page </H1>\n//     <form action=\"/login\" method = \"post\">\n//         <input type=\"text\" name=\"userName\">\n//         <input type=\"text\" name=\"password\">\n//         <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n//         <input type=\"submit\">\n//     </form>\n// </body>\n// </html>"});
});

app.get('/two', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "const express = require('express');\nconst session = require('express-session');\nconst router = require('./routes/router');\nconst path = require('path');\nconst { dbConnect } = require('./config/database');\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(session({\n    saveUninitialized: true,\n    resave: false,\n    secret: \"Secret\",\n}))\napp.use(express.json());\napp.use(express.urlencoded({extended: true}));\napp.use(express.static(path.join(__dirname, '/view')));\napp.use('/api/', router);\n\napp.get('/admin', (req,res)=>{\n    res.sendFile(__dirname + \"/admin.html\");\n})\n\napp.listen(PORT, () => {\n    console.log(\"Server started\");\n})\ndbConnect();\n\n\n\nconst router = require('express').Router();\nconst path = require('path');\nconst upload = require('../config/muter');\n\nconst { login, signup, fetchAllUsers } = require('../controllers/controllers');\nconst { auth } = require('../middlewares/auth');\n\nrouter.get('/', (req, res) => {\n    res.sendFile(path.join(__dirname, '../view/home.html'));\n})\nrouter.get('/login', (req, res) => {\n    res.sendFile(path.join(__dirname, '../view/login.html'));\n})\nrouter.get('/signup', (req, res) => {\n    res.sendFile(path.join(__dirname, '../view/signup.html'));\n})\nrouter.get('/dashboard', auth,(req, res) => {\n    res.sendFile(path.join(__dirname, '../view/dashboard.html'));\n})\nrouter.get('/admin', fetchAllUsers)\n\nrouter.post('/login', login);\nrouter.post('/signup',  upload.single('profileImage'), signup);\n\nmodule.exports = router;\n\n\n\n\n\n\n\nconst User = require('../model/User');\n\nconst login = async(req, res) => {\n    try {\n        const { email, password } = req.body;\n        if(!email || !password) {\n            return res.send(\"Please fill all the details\");\n        }\n        const userDetails = await User.findOne({email: email, password: password});\n\n        if(!userDetails) {\n            return res.send(\"User do not exist\");\n        }\n\n        userDetails.password = undefined;\n        req.session.user = userDetails;\n        res.redirect('/api/dashboard');\n    } catch (error) {\n        console.log(\"Error occurred at login controller\", error);\n        res.status(500).json({\n            success: false,\n            message: \"Internal Server Error\",\n        })\n    }\n}\n\nconst signup = async(req, res) => {\n    try {\n        const { username, email, password, confirmPassword } = req.body;\n        const  profileImage  = req.file;\n        console.log(profileImage);\n\n        if(confirmPassword !== password) {\n            return res.send(\"Passwords are not matching\");\n        }\n        \n        const userDetails = await User.findOne({email: email});\n\n        if(userDetails) {\n            return res.send(\"User already exists\");\n        }\n\n        const newUser = await User.create({username, email, password, profileImage: profileImage.originalname});\n        res.redirect('/api/login');\n    } catch (error) {\n        console.log(\"Error occurred at signup controller\", error);\n        res.status(500).json({\n            success: false,\n            message: \"Internal Server Error\",\n        })\n    }\n}\n\nconst fetchAllUsers = async(req, res) => {\n    try {\n        const allUsers = await User.find();\n        res.send(allUsers);\n    } catch (error) {\n        console.log(\"Error occurred at fetchAllUsers controller\", error);\n        res.status(500).json({\n            success: false,\n            message: \"Internal Server Error\",\n        })\n    }\n}\n\nmodule.exports = {fetchAllUsers, signup, login};\n\n\n\n\n\nconst multer = require('multer');\nconst path = require('path');\n\n\nconst fileFilter = (req, file, cb) => {\n    if(file.mimetype === 'image/jpeg' || file.mimetype === 'image/jpg' || file.mimetype === 'image/png') {\n        cb(null, true);\n    } else {\n        cb(new Error('Only .jpg and .png files are allowed!'), false);\n    }\n}\n\nconst storage = multer.diskStorage({\n    destination: function (req, file, cb) {\n        cb(null, path.join(__dirname, '../view'));\n    },\n    filename: function (req, file, cb) {\n        cb(null, file.originalname);\n    }\n})\n\nconst upload = multer({\n    storage: storage, \n    fileFilter: fileFilter, \n    limits: {fileSize: 5 * 1024 * 1024}\n});\n\nmodule.exports = upload;" });
});

app.get('/three', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: 'Text for /three route' });
});

// Start the server
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});
