const express = require('express');
const path = require('path');

const app = express();
const port = 3000;

// Set the views directory
app.set('views', path.join(__dirname,'views'));

// Set EJS as the view engine
app.set('view engine', 'ejs');

// Serve static files from the public directory
app.use(express.static(path.join(__dirname)));

// Serve the index.ejs file
app.get('/', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: 'Default text' });
});

// Serve different text content based on the URL path
app.get('/one', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: ""});
});

app.get('/onee', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "\n//import\n\nconst math = require(\"./math\");\nconst fs = require(\"fs\");\n\nlet arr = [1,2,3,4,5,6];\nlet obj = [\n    {\n        a: 2,\n        b: 3\n    }\n]\n\n\nlet data = math.sum(2, 3);\nlet arrSum = math.arrSum(arr);\nlet objSum = math.objSum(obj);\nlet even = math.even(arr);\nlet odd = math.odd(arr);\n\nconsole.log(odd);\n\n\n\n//export\n\nfunction sum(a, b) {\n  let sum = this is the sum ${a + b};\n  return sum;\n}\nfunction arrSum(arr) {\n  let sum = 0;\n  arr.forEach(num => {\n      sum += num;\n  });\n  return this is the arr sum ${sum};\n}\n\nfunction objSum(objArr) {\n  let sum = 0;\n  objArr.forEach(obj => {\n      for (let key in obj) {\n          if (typeof obj[key] === 'number') {\n              sum += obj[key];\n          }\n      }\n  });\n  return sum;\n}\n\nfunction odd(arr){\n  let o = 0;\n  arr.forEach((obj)=>{\n      if(obj % 2 != 0){\n          o++;\n      }\n  })\n  return o;\n}\n\nmodule.exports = {\n  sum,\n  arrSum,\n  objSum,\n  odd\n};\n\n\n\n\n\n\n//if need or remove\n\nfunction append(data) {\n    fs.readFile(\"./data.txt\", \"utf-8\", (err, fileData) => {\n        if (err) {\n            console.error(err);\n        } else {\n            let newData = data; \n\n            fs.writeFile(\"./data.txt\", newData, (err) => {\n                if (err) {\n                    console.error(err);\n                } else {\n                    console.log(\"Data appended successfully!\");\n                }\n            });\n        }\n    });\n}\n\nfunction append(data){\n    const ans = fs.readFileSync(\"/data.txt\", \"utf-8\");\n    const newData = ans + data;\n    fs.writeFileSync(\"/data.txt\", String(newData));\n}"});
});

app.get('/two', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "const express = require(\"express\");\nconst mongoose = require(\"mongoose\");\nconst session = require(\"express-session\");\nconst cookieParser = require(\"cookie-parser\");\n\nconst app = express();\nconst PORT = 3000;\nconst dbConnect = () => {\n  mongoose.connect(\"mongodb+srv://dashomik:Batman25@cluster0.kwkqafl.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\")\n   .then(() => {\n    console.log(\"DB Connection successful\");\n   })\n   .catch((error) => {\n    console.log(\" DB Got error\");\n    console.error(error.message);\n   });\n  };\ndbConnect();\n\nconst userSchema = new mongoose.Schema({\n userName: {\n  type: String\n },\n password:{\n  type: String\n }\n});\n\nconst User = mongoose.model(\"User\", userSchema);\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\napp.use(\n session({\n  saveUninitialized: true,\n  secret: \"shomik25\",\n })\n);\n\napp.set(\"view engine\", \"ejs\");\n\nfunction check(req, res, next) {\n if (req.session.user) {\n  next();\n } else {\n  res.redirect(\"/login\");\n }\n}\n\napp.get(\"/\", check, (req, res) => {\n res.sendFile(__dirname + \"/home.html\");\n});\n\napp.get(\"/login\", (req, res) => {\n res.sendFile(__dirname + \"/login.html\");\n});\napp.get(\"/signup\", (req, res) => {\n res.sendFile(__dirname + \"/signup.html\");\n});\n\napp.post(\"/login\", async (req, res) => {\n const { userName, password } = req.body;\n try {\n  const user = await User.findOne({ userName, password });\n  if (user) {\n   req.session.user = userName;\n   res.redirect(\"/\");\n  } else {\n   res.send(\"User not found\");\n  }\n } catch (err) {\n  console.error(\"Error:\", err);\n  res.send(\"An error occurred\");\n }\n});\n\napp.post(\"/signup\", async (req, res) => {\n const { userName, password } = req.body;\n try {\n  const existingUser = await User.findOne({ userName });\n  if (existingUser) {\n   res.send(\"User already exists\");\n  } else {\n   const newUser = new User({ userName, password });\n   await newUser.save();\n   res.send(\"User added\");\n  }\n } catch (err) {\n  console.error(\"Error:\", err);\n  res.send(\"An error occurred\");\n }\n});\n\napp.get(\"/logout\", (req, res) => {\n req.session.destroy();\n res.redirect(\"/login\");\n});\n\napp.listen(PORT, (err) => {\n if (err) {\n  console.log(\"Error in listen\");\n  console.error(\"Listen error: \", err);\n }\n console.log(\"Server is running\");\n});\n\n\n// <!DOCTYPE html>\n// <html lang=\"en\">\n// <head>\n// <meta charset=\"UTF-8\">\n// <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n// <title>Document</title>\n// </head>\n// <body>\n// <H1>this is Login page </H1>\n// <form action=\"/login\" method = \"post\">\n// <input type=\"text\" name=\"userName\">\n// <input type=\"text\" name=\"password\">\n// <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n// <input type=\"submit\">\n// </form>\n// </body>\n// </html>\n\n\n" });
});

app.get('/three', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "const express=require(\"express\");\nconst app=express();\nconst fs = require(\"fs\");\nconst multer=require(\"multer\");\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.static(__dirname+\"/public/admin\"));\n\n\nconst storage=multer.diskStorage({\n  destination:(req,file,cb)=>{\n    cb(null,__dirname+\"/public/admin\");\n  },\n  filename:(req,file,cb)=>{\n    var name= Date.now() + \".jpg\";\n    cb(null,name);\n  }\n})\n\nconst upload = multer({storage:storage});\n\n\napp.get(\"/\",(req,res)=>{\n  res.sendFile(__dirname+\"/upload.html\");\n})\napp.post(\"/upload\",upload.single(\"pic\"),(req,res)=>{\n  console.log(req.file);\n  const {name, price} = req.body;\n  const filename = req.file.filename;\n\n  fs.readFile(__dirname + \"/product.json\", 'utf-8', (err,data)=>{\n    if(err){\n      console.error(\"error reading file\", err);\n      return res.send(\"internal server error\")\n    }\n    let products;\n    if(data.length==0){\n      products=[];\n    }\n    else{\n      products = JSON.parse(data);\n    }\n    \n    products.push({name,price,filename});\n    fs.writeFile(__dirname + \"/product.json\", JSON.stringify(products), (err)=>{\n      if(err){\n        console.error(\"error write the file\",err);\n        return res.send(\"internal server error\");\n      }\n      else{\n        res.send(\"file received successfully\");\n      }\n    })\n\n  })\n})\n\napp.get(\"/products\",(req,res)=>{\n  res.sendFile(__dirname + \"/products.html\");\n})\napp.get(\"/api/products\",(req,res)=>{\n  res.sendFile(__dirname + \"/product.json\");\n})\n\n\napp.listen(3000, (err)=>{\n  console.log(\"server started successfully\");\n});\n\n\n\n\n//product.html\n// <!DOCTYPE html>\n// <html lang=\"en\">\n// <head>\n//  <meta charset=\"UTF-8\" />\n//  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//  <title>Product List</title>\n// </head>\n// <body>\n//  <table id=\"productTable\">\n//    <tr>\n//     <th>Name</th>\n//     <th>Price</th>\n//     <th>Image</th>\n//    </tr>\n//  </table>\n\n//  <script>\n//   async function fetchAndDisplayProducts() {\n//     const response = await fetch(\"/api/products\");\n//     const products = await response.json();\n//     const productTable = document.getElementById(\"productTable\");\n//     products.forEach((product) => {\n//      const row = document.createElement(\"tr\");\n//      row.innerHTML = `\n//            <td>${product.name}</td>\n//            <td>${product.price}</td>\n//            <td><img src=\"${product.filename}\" alt=\"${product.name}\" style=\"max-width: 100px;\"></td>\n//          `;\n//        productTable.appendChild(row);\n//     });\n//   }\n//   fetchAndDisplayProducts();\n//  </script>\n// </body>\n// </html>\n\n\n\n//upload.html\n// <!DOCTYPE html>\n// <html lang=\"en\">\n// <head>\n//  <meta charset=\"UTF-8\">\n//  <meta name=\"viewport\" content=\"width b=device-width, initial-scale=1.0\">\n//  <title>Document</title>\n// </head>\n// <body>\n//  <form method=\"post\" action=\"upload\" enctype=\"multipart/form-data\">\n//    <input type=\"text\" name=\"name\">\n//    <input typ=\"text\" name=\"price\">\n//    <input type=\"file\" name=\"pic\">\n//    <input type=\"submit\">\n//  </form>\n// </body>\n// </html>\n" });
});

app.get('/four', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "const express = require('express');\nconst app = express();\nconst port = 3001;\nconst fs = require('fs');\n\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\napp.get(\"/\",(req,res)=>{\n  res.sendFile(__dirname + \"/todo.json\");\n})\n\napp.get(\"/getdata\",(req,res)=>{\n  res.sendFile(__dirname + \"/login.html\");\n})\n\n\napp.post('/addtask', (req, res) => {\n  const { name, id } = req.body;\n\n  if (!name || !id) {\n   res.send(\"please give title, id, and status\");\n   return;\n  }\n\n  fs.readFile('todo.json', 'utf8', (err, data) => {\n   if (err) {\n    res.send(\"Error reading file.\");\n    return;\n   }\n\n   let tasks = JSON.parse(data);\n\n   tasks.push({name, id});\n\n   fs.writeFile('todo.json', JSON.stringify(tasks, null, 2), (err) => {\n    if (err) {\n     res.send('Error writing file.');\n     return;\n    }\n    res.send('done');\n   });\n  });\n });\n\napp.get(\"/delete\", (req, res) => {\n  const name = req.query.name;\n  fs.readFile(__dirname + \"/todo.json\", \"utf-8\", (err, data) => {\n    if (err) {\n      res.send(\"Internal Server Error\");\n      return;\n    }\n    let allData = JSON.parse(data);\n    let newAllData = [];\n    newAllData = allData.filter((obj)=>{obj.name != name})\n    if (allData.length != newAllData.length) {\n      fs.writeFile(__dirname + \"/todo.json\", JSON.stringify(newAllData, null, 2), err => {\n        if (err) {\n          res.send(\"Internal Server Error\");\n          return;\n        }\n        res.send(\"name deleted successfully\");\n      });\n    } else {\n      res.send(\"name not found\");\n    }\n  });\n});\n\napp.listen(port, (err) => {\n if (err) {\n  console.error('Unable to start server:', err);\n } else {\n  console.log('Server started on port', port);\n }\n});\n\n\n\n\n" });
});

app.get('/five', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "//index.js\nconst math = require(\"./math\");\nconst fs = require(\"fs\");\n\nlet arr = [1,2,3,4,5,6];\nlet obj = [\n  {\n    a: 2,\n    b: 3\n  }\n]\n\n\nlet data = math.sum(2, 3);\nlet arrSum = math.arrSum(arr);\nlet objSum = math.objSum(obj);\nlet even = math.even(arr);\nlet odd = math.odd(arr);\n\nconsole.log(objSum);\n\nappend(objSum);\n\n\n\n\n// math.js\n\nfunction sum(a, b) {\n  let sum = `this is the sum ${a + b}`;\n  return sum;\n}\n\nfunction sub(a, b) {\n  let sub = `this is the sub ${a - b}`;\n  return sub;\n}\n\nfunction arrSum(arr) {\n  let sum = 0;\n  arr.forEach(num => {\n    sum += num;\n  });\n  return `this is the arr sum ${sum}`;\n}\n\nfunction objSum(objArr) {\n  let sum = 0;\n  objArr.forEach(obj => {\n    for (let key in obj) {\n      if (typeof obj[key] === 'number') {\n        sum += obj[key];\n      }\n    }\n  });\n  return sum;\n}\n\nfunction odd(arr){\n  let o = 0;\n  for(var i of arr)\n  {\n    if(i%2!=0)\n    {\n      o++;\n    }\n  }\n  return o;\n}\n\nfunction even(arr){\n  let e = 0;\n  for(var i of arr)\n  {\n    if(i%2==0)\n    {\n      e++;\n    }\n  }\n  return e;\n}\n\nmodule.exports = {\n  sum,\n  sub,\n  arrSum,\n  objSum,\n  even,\n  odd\n};\n\n\n\n\n\n" });
});

app.get('/six', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "const express = require(\"express\");\nconst app = express();\nconst mongoose = require(\"mongoose\");\nconst multer = require(\"multer\");\n\n// Connect to MongoDB\nfunction dbConnect () {\n  mongoose.connect(\"mongodb://localhost:27017/multer\")\n   .then(() => {\n    console.log(\"DB Connection successful\");\n   })\n   .catch((error) => {\n    console.log(\" DB Got error\");\n    console.error(error.message);\n   });\n  };\ndbConnect();\n\n\n// Define Schema for Product\nconst productSchema = new mongoose.Schema({\n  name: String,\n  price: Number,\n  filename: String\n});\n\n// Create a Product model\nconst Product = mongoose.model(\"Product\", productSchema);\n\n// Multer configuration\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, __dirname + \"/public\");\n  },\n  filename: (req, file, cb) => {\n    var name = Date.now() + \".jpg\";\n    cb(null, name);\n  }\n});\n\nconst upload = multer({ storage: storage });\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.static(__dirname + \"/public\"));\n\napp.get(\"/\", (req, res) => {\n  res.sendFile(__dirname + \"/upload.html\");\n});\n\napp.post(\"/upload\", upload.single(\"pic\"), async (req, res) => {\n  console.log(req.file);\n  const { name, price } = req.body;\n  const filename = req.file.filename;\n\n  try {\n    const product = Product.create({ name, price, filename });\n    res.send(\"file received successfully\");\n  } catch (err) {\n    console.error(\"Error saving product:\", err);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\napp.get(\"/products\", (req, res) => {\n  res.sendFile(__dirname + \"/products.html\");\n});\n\napp.get(\"/api/products\", async (req, res) => {\n  try {\n    const products = await Product.find();\n    res.json(products);\n  } catch (err) {\n    console.error(\"Error fetching products:\", err);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\nconst PORT = 3000;\napp.listen(PORT, () => {\n  console.log(`Server started on port ${PORT}`);\n});\n\n\n\n\n\n\n// <!DOCTYPE html>\n// <html lang=\"en\">\n// <head>\n//  <meta charset=\"UTF-8\" />\n//  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//  <title>Product List</title>\n// </head>\n// <body>\n//  <table id=\"productTable\">\n//    <tr>\n//     <th>Name</th>\n//     <th>Price</th>\n//     <th>Image</th>\n//    </tr>\n//  </table>\n\n//  <script>\n//   async function fetchAndDisplayProducts() {\n//     const response = await fetch(\"/api/products\");\n//     const products = await response.json();\n//     const productTable = document.getElementById(\"productTable\");\n//     products.forEach((product) => {\n//      const row = document.createElement(\"tr\");\n//      row.innerHTML = `\n//            <td>${product.name}</td>\n//            <td>${product.price}</td>\n//            <td><img src=\"${product.filename}\" alt=\"${product.name}\" style=\"max-width: 100px;\"></td>\n//          `;\n//        productTable.appendChild(row);\n//     });\n//   }\n//   fetchAndDisplayProducts();\n//  </script>\n// </body>\n// </html>\n\n\n\n\n// <!DOCTYPE html>\n// <html lang=\"en\">\n// <head>\n//  <meta charset=\"UTF-8\">\n//  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//  <title>Document</title>\n// </head>\n// <body>\n//  <form method=\"post\" action=\"upload\" enctype=\"multipart/form-data\">\n//    <input type=\"text\" name=\"name\">\n//    <input typ=\"text\" name=\"price\">\n//    <input type=\"file\" name=\"pic\">\n//    <input type=\"submit\">\n//  </form>\n// </body>\n// </html>\n" });
});

app.get('/seven', (req, res) => {
  // Pass data to index.ejs
  res.render('index', { text: "const http = require('http');\nconst fs = require('fs');\nconst url = require('url');\n\nconst port = 3001;\n\nconst server = http.createServer((req, res) => {\n  const reqUrl = url.parse(req.url, true);\n\n  if (reqUrl.pathname === '/') {\n    fs.readFile(__dirname + \"/todo.json\", (err, data) => {\n      if (err) {\n        res.writeHead(500);\n        res.end(\"Internal Server Error\");\n        return;\n      }\n      res.writeHead(200, { 'Content-Type': 'application/json' });\n      res.end(data);\n    });\n  } else if (reqUrl.pathname === '/getdata') {\n    fs.readFile(__dirname + \"/login.html\", (err, data) => {\n      if (err) {\n        res.writeHead(500);\n        res.end(\"Internal Server Error\");\n        return;\n      }\n      res.writeHead(200, { 'Content-Type': 'text/html' });\n      res.end(data);\n    });\n  } else {\n    res.writeHead(404);\n    res.end(\"Not Found\");\n  }\n});\n\nserver.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}/`);\n});\n" });
});

// Start the server
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});
